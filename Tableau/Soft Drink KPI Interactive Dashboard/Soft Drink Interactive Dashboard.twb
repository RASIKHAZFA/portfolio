<?xml version='1.0' encoding='utf-8' ?>

<!-- build 20233.23.1017.0948                               -->
<workbook original-version='18.1' source-build='2023.3.0 (20233.23.1017.0948)' source-platform='win' version='18.1' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <document-format-change-manifest>
    <_.fcp.AccessibleZoneTabOrder.true...AccessibleZoneTabOrder />
    <_.fcp.AnimationOnByDefault.true...AnimationOnByDefault />
    <AutoCreateAndUpdateDSDPhoneLayouts />
    <IntuitiveSorting />
    <IntuitiveSorting_SP2 />
    <MapboxVectorStylesAndLayers />
    <_.fcp.MarkAnimation.true...MarkAnimation />
    <_.fcp.ObjectModelEncapsulateLegacy.true...ObjectModelEncapsulateLegacy />
    <_.fcp.ObjectModelTableType.true...ObjectModelTableType />
    <_.fcp.SchemaViewerObjectModel.true...SchemaViewerObjectModel />
    <SetMembershipControl />
    <SheetIdentifierTracking />
    <SortTagCleanup />
    <SpatialFileLayer />
    <WindowsPersistSimpleIdentifiers />
    <WorksheetBackgroundTransparency />
    <ZoneBackgroundTransparency />
  </document-format-change-manifest>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <_.fcp.AnimationOnByDefault.false...style>
    <_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule element='animation'>
      <_.fcp.AnimationOnByDefault.false...format attr='animation-on' value='ao-on' />
    </_.fcp.AnimationOnByDefault.false..._.fcp.MarkAnimation.true...style-rule>
  </_.fcp.AnimationOnByDefault.false...style>
  <datasources>
    <datasource hasconnection='false' inline='true' name='Parameters' version='18.1'>
      <aliases enabled='yes' />
      <column caption='Matrix' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
        <calculation class='tableau' formula='&quot;Profit&quot;' />
        <members>
          <member value='&quot;Revenue&quot;' />
          <member value='&quot;Profit&quot;' />
          <member value='&quot;Unit Solds&quot;' />
          <member value='&quot;Cost of Goods&quot;' />
        </members>
      </column>
    </datasource>
    <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' inline='true' name='federated.168p6db1xg705o14ow2gk1wxlnyd' version='18.1'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='us_ak_hi_counties_shift_conformal_faux_WM' name='ogrdirect.1mdeccc0v4nr8814v49071vbndz3'>
            <connection class='ogrdirect' directory='E:/Coding/Tableau/Soft Drink KPI Interactive Dashboard/states_and_counties_boom/states_and_counties_boom' filename='us_ak_hi_counties_shift_conformal_faux_WM.shp' password='' server='' tablename='' />
          </named-connection>
          <named-connection caption='soft_drink_sales' name='textscan.0kaajfh10yazq715bbpb71krapyf'>
            <connection class='textscan' directory='E:/Coding/Tableau/Soft Drink KPI Interactive Dashboard' filename='soft_drink_sales.csv' password='' server='' />
          </named-connection>
        </named-connections>
        <_.fcp.ObjectModelEncapsulateLegacy.false...relation connection='textscan.0kaajfh10yazq715bbpb71krapyf' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
          <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
            <column datatype='string' name='Product' ordinal='0' />
            <column datatype='string' name='Company' ordinal='1' />
            <column datatype='string' name='Category' ordinal='2' />
            <column datatype='integer' name='Units Sold' ordinal='3' />
            <column datatype='integer' name='Revenue' ordinal='4' />
            <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
            <column datatype='integer' name='Profit' ordinal='6' />
            <column datatype='date' name='Purchase Date' ordinal='7' />
            <column datatype='string' name='Customer Name' ordinal='8' />
            <column datatype='string' name='Customer State' ordinal='9' />
            <column datatype='string' name='Customer City' ordinal='10' />
            <column datatype='integer' name='Customer Zip Code' ordinal='11' />
            <column datatype='string' name='Order ID' ordinal='12' />
          </columns>
        </_.fcp.ObjectModelEncapsulateLegacy.false...relation>
        <_.fcp.ObjectModelEncapsulateLegacy.true...relation type='collection'>
          <relation connection='textscan.0kaajfh10yazq715bbpb71krapyf' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
            <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
              <column datatype='string' name='Product' ordinal='0' />
              <column datatype='string' name='Company' ordinal='1' />
              <column datatype='string' name='Category' ordinal='2' />
              <column datatype='integer' name='Units Sold' ordinal='3' />
              <column datatype='integer' name='Revenue' ordinal='4' />
              <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
              <column datatype='integer' name='Profit' ordinal='6' />
              <column datatype='date' name='Purchase Date' ordinal='7' />
              <column datatype='string' name='Customer Name' ordinal='8' />
              <column datatype='string' name='Customer State' ordinal='9' />
              <column datatype='string' name='Customer City' ordinal='10' />
              <column datatype='integer' name='Customer Zip Code' ordinal='11' />
              <column datatype='string' name='Order ID' ordinal='12' />
            </columns>
          </relation>
          <relation connection='ogrdirect.1mdeccc0v4nr8814v49071vbndz3' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
            <columns>
              <column datatype='string' name='STATEFP' ordinal='0' />
              <column datatype='string' name='Name' ordinal='1' />
              <column datatype='spatial' name='Geometry' ordinal='2' />
            </columns>
          </relation>
        </_.fcp.ObjectModelEncapsulateLegacy.true...relation>
        <metadata-records>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='character-set'>&quot;UTF-8&quot;</attribute>
              <attribute datatype='string' name='collation'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='field-delimiter'>&quot;,&quot;</attribute>
              <attribute datatype='string' name='header-row'>&quot;true&quot;</attribute>
              <attribute datatype='string' name='locale'>&quot;en_US&quot;</attribute>
              <attribute datatype='string' name='single-char'>&quot;&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Product</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Product]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Product</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Company</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Company]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Company</remote-alias>
            <ordinal>1</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Category</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Category]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Category</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Units Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Units Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Units Sold</remote-alias>
            <ordinal>3</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Revenue</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Revenue]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Revenue</remote-alias>
            <ordinal>4</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Cost of Goods Sold</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Cost of Goods Sold]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Cost of Goods Sold</remote-alias>
            <ordinal>5</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Profit</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Profit]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Profit</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Purchase Date</remote-name>
            <remote-type>133</remote-type>
            <local-name>[Purchase Date]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Purchase Date</remote-alias>
            <ordinal>7</ordinal>
            <local-type>date</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer Name]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Name</remote-alias>
            <ordinal>8</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer State</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer State]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer State</remote-alias>
            <ordinal>9</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer City</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Customer City]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer City</remote-alias>
            <ordinal>10</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Customer Zip Code</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Customer Zip Code]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Customer Zip Code</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Order ID</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Order ID]</local-name>
            <parent-name>[soft_drink_sales.csv]</parent-name>
            <remote-alias>Order ID</remote-alias>
            <ordinal>12</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <scale>1</scale>
            <width>1073741823</width>
            <contains-null>true</contains-null>
            <collation flag='0' name='LEN_RUS' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>STATEFP</remote-name>
            <remote-type>129</remote-type>
            <local-name>[STATEFP]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>STATEFP</remote-alias>
            <ordinal>13</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_26D98DEC57344F66BAFE3D0E2BAE5AC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Name</remote-name>
            <remote-type>129</remote-type>
            <local-name>[Name]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Name</remote-alias>
            <ordinal>14</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='0' name='binary' />
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_26D98DEC57344F66BAFE3D0E2BAE5AC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Geometry</remote-name>
            <remote-type>8</remote-type>
            <local-name>[Geometry]</local-name>
            <parent-name>[us_ak_hi_states_shift_conformal_faux_WM.shp]</parent-name>
            <remote-alias>Geometry</remote-alias>
            <ordinal>15</ordinal>
            <local-type>spatial</local-type>
            <aggregation>Collect</aggregation>
            <contains-null>true</contains-null>
            <_.fcp.ObjectModelEncapsulateLegacy.true...object-id>[us_ak_hi_states_shift_conformal_faux_WM.shp_26D98DEC57344F66BAFE3D0E2BAE5AC2]</_.fcp.ObjectModelEncapsulateLegacy.true...object-id>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='Metric Selected' datatype='integer' name='[Calculation_618682030776619008]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Unit Solds&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
      </column>
      <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
      <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
      <column datatype='string' name='[Customer City]' role='dimension' semantic-role='[City].[Name]' type='nominal' />
      <column caption='Customer Name1' datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
      <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
        <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
          <bin default-name='false' value='&quot;Central&quot;'>
            <value>&quot;Illinois&quot;</value>
            <value>&quot;Indiana&quot;</value>
            <value>&quot;Iowa&quot;</value>
            <value>&quot;Kansas&quot;</value>
            <value>&quot;Kentucky&quot;</value>
            <value>&quot;Michigan&quot;</value>
            <value>&quot;Minnesota&quot;</value>
            <value>&quot;Missouri&quot;</value>
            <value>&quot;Nebraska&quot;</value>
            <value>&quot;North Dakota&quot;</value>
            <value>&quot;Ohio&quot;</value>
            <value>&quot;South Dakota&quot;</value>
            <value>&quot;Wisconsin&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;East&quot;'>
            <value>&quot;Connecticut&quot;</value>
            <value>&quot;Delaware&quot;</value>
            <value>&quot;Maine&quot;</value>
            <value>&quot;Maryland&quot;</value>
            <value>&quot;Massachusetts&quot;</value>
            <value>&quot;New Hampshire&quot;</value>
            <value>&quot;New Jersey&quot;</value>
            <value>&quot;New York&quot;</value>
            <value>&quot;Pennsylvania&quot;</value>
            <value>&quot;Rhode Island&quot;</value>
            <value>&quot;Vermont&quot;</value>
            <value>&quot;Virginia&quot;</value>
            <value>&quot;West Virginia&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;South&quot;'>
            <value>&quot;Alabama&quot;</value>
            <value>&quot;Arkansas&quot;</value>
            <value>&quot;Florida&quot;</value>
            <value>&quot;Georgia&quot;</value>
            <value>&quot;Louisiana&quot;</value>
            <value>&quot;Mississippi&quot;</value>
            <value>&quot;North Carolina&quot;</value>
            <value>&quot;Oklahoma&quot;</value>
            <value>&quot;South Carolina&quot;</value>
            <value>&quot;Tennessee&quot;</value>
            <value>&quot;Texas&quot;</value>
          </bin>
          <bin default-name='false' value='&quot;West&quot;'>
            <value>&quot;Alaska&quot;</value>
            <value>&quot;Arizona&quot;</value>
            <value>&quot;California&quot;</value>
            <value>&quot;Colorado&quot;</value>
            <value>&quot;Hawaii&quot;</value>
            <value>&quot;Idaho&quot;</value>
            <value>&quot;Montana&quot;</value>
            <value>&quot;Nevada&quot;</value>
            <value>&quot;New Mexico&quot;</value>
            <value>&quot;Oregon&quot;</value>
            <value>&quot;Utah&quot;</value>
            <value>&quot;Washington&quot;</value>
            <value>&quot;Wyoming&quot;</value>
          </bin>
        </calculation>
      </column>
      <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
      <column aggregation='Sum' datatype='integer' default-format='*00000' name='[Customer Zip Code]' role='dimension' semantic-role='[ZipCode].[Name]' type='ordinal' />
      <column caption='Product1' datatype='string' name='[Product]' role='dimension' type='nominal' />
      <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
      <column caption='Statefp' datatype='string' name='[STATEFP]' role='dimension' type='nominal' />
      <_.fcp.ObjectModelTableType.true...column caption='soft_drink_sales.csv' datatype='table' name='[__tableau_internal_object_id__].[soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA]' role='measure' type='quantitative' />
      <_.fcp.ObjectModelTableType.true...column caption='us_ak_hi_states_shift_conformal_faux_WM.shp' datatype='table' name='[__tableau_internal_object_id__].[us_ak_hi_states_shift_conformal_faux_WM.shp_26D98DEC57344F66BAFE3D0E2BAE5AC2]' role='measure' type='quantitative' />
      <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
      <group caption='Action (Customer Name1)' hidden='true' name='[Action (Customer Name1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer Name]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Purchase Date))' hidden='true' name='[Action (MONTH(Purchase Date))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (MONTH(Purchase Date1))' hidden='true' name='[Action (MONTH(Purchase Date1))]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' />
        </groupfilter>
      </group>
      <group caption='Action (Region,Customer State1)' hidden='true' name='[Action (Region,Customer State1)]' name-style='unqualified' user:auto-column='sheet_link'>
        <groupfilter function='crossjoin'>
          <groupfilter function='level-members' level='[Customer State (group)]' />
          <groupfilter function='level-members' level='[Customer State]' />
        </groupfilter>
      </group>
      <layout _.fcp.SchemaViewerObjectModel.false...dim-percentage='0.5' _.fcp.SchemaViewerObjectModel.false...measure-percentage='0.4' dim-ordering='alphabetic' measure-ordering='alphabetic' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[Customer State (group)]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;West&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;Central&quot;</bucket>
            </map>
            <map to='#a2a2a2'>
              <bucket>%null%</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;East&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;South&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;United States&quot;' />
      </semantic-values>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Matrix' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
        </column>
      </datasource-dependencies>
      <_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
        <objects>
          <object caption='soft_drink_sales.csv' id='soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA'>
            <properties context=''>
              <relation connection='textscan.0kaajfh10yazq715bbpb71krapyf' name='soft_drink_sales.csv' table='[soft_drink_sales#csv]' type='table'>
                <columns character-set='UTF-8' header='yes' locale='en_US' separator=','>
                  <column datatype='string' name='Product' ordinal='0' />
                  <column datatype='string' name='Company' ordinal='1' />
                  <column datatype='string' name='Category' ordinal='2' />
                  <column datatype='integer' name='Units Sold' ordinal='3' />
                  <column datatype='integer' name='Revenue' ordinal='4' />
                  <column datatype='integer' name='Cost of Goods Sold' ordinal='5' />
                  <column datatype='integer' name='Profit' ordinal='6' />
                  <column datatype='date' name='Purchase Date' ordinal='7' />
                  <column datatype='string' name='Customer Name' ordinal='8' />
                  <column datatype='string' name='Customer State' ordinal='9' />
                  <column datatype='string' name='Customer City' ordinal='10' />
                  <column datatype='integer' name='Customer Zip Code' ordinal='11' />
                  <column datatype='string' name='Order ID' ordinal='12' />
                </columns>
              </relation>
            </properties>
          </object>
          <object caption='us_ak_hi_states_shift_conformal_faux_WM.shp' id='us_ak_hi_states_shift_conformal_faux_WM.shp_26D98DEC57344F66BAFE3D0E2BAE5AC2'>
            <properties context=''>
              <relation connection='ogrdirect.1mdeccc0v4nr8814v49071vbndz3' name='us_ak_hi_states_shift_conformal_faux_WM.shp' table='[us_ak_hi_states_shift_conformal_faux_WM.shp]' type='table'>
                <columns>
                  <column datatype='string' name='STATEFP' ordinal='0' />
                  <column datatype='string' name='Name' ordinal='1' />
                  <column datatype='spatial' name='Geometry' ordinal='2' />
                </columns>
              </relation>
            </properties>
          </object>
        </objects>
        <relationships>
          <relationship>
            <expression op='='>
              <expression op='[Customer State]' />
              <expression op='[Name]' />
            </expression>
            <first-end-point object-id='soft_drink_sales.csv_D0742163A24043BD8E2DE7E6713057AA' />
            <second-end-point object-id='us_ak_hi_states_shift_conformal_faux_WM.shp_26D98DEC57344F66BAFE3D0E2BAE5AC2' />
          </relationship>
        </relationships>
      </_.fcp.ObjectModelEncapsulateLegacy.true...object-graph>
    </datasource>
  </datasources>
  <mapsources>
    <mapsource name='Tableau' />
  </mapsources>
  <shared-views>
    <shared-view name='federated.168p6db1xg705o14ow2gk1wxlnyd'>
      <datasources>
        <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.168p6db1xg705o14ow2gk1wxlnyd' />
      </datasources>
      <datasource-dependencies datasource='federated.168p6db1xg705o14ow2gk1wxlnyd'>
        <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
            <bin default-name='false' value='&quot;Central&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Louisiana&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Tennessee&quot;</value>
              <value>&quot;Texas&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Hawaii&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]'>
        <groupfilter function='level-members' level='[Customer State (group)]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]'>
        <groupfilter function='level-members' level='[none:Category:nk]' user:ui-enumeration='all' user:ui-marker='enumerate' />
      </filter>
      <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]'>
        <groupfilter function='member' level='[none:Company:nk]' member='&quot;Coca-Cola&quot;' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
      </filter>
      <filter class='quantitative' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]' included-values='in-range'>
        <min>#2020-01-01 00:00:00#</min>
        <max>#2023-07-01 00:00:00#</max>
      </filter>
    </shared-view>
  </shared-views>
  <actions>
    <action caption='Filter 1 (generated)' name='[Action1_5B8462D096D94FC3A3317764EAF658DD]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Line Chart' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 2 (generated)' name='[Action2_CAD3D87499E74A4B8BCE376F061E042F]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='map' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
    <action caption='Filter 3 (generated)' name='[Action3_4ED1CEB56F6F4EE3A77A28A824FD1CEE]'>
      <activation auto-clear='true' type='on-select' />
      <source dashboard='Dashboard 1' type='sheet' worksheet='Product' />
      <command command='tsc:tsl-filter'>
        <param name='special-fields' value='all' />
        <param name='target' value='Dashboard 1' />
      </command>
    </action>
  </actions>
  <worksheets>
    <worksheet name='Customer'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; by Customer</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.168p6db1xg705o14ow2gk1wxlnyd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Matrix' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.168p6db1xg705o14ow2gk1wxlnyd'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_618682030776619008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Unit Solds&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Customer Name1' datatype='string' name='[Customer Name]' role='dimension' type='nominal' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer Name]' derivation='None' name='[none:Customer Name:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_618682030776619008]' derivation='Sum' name='[sum:Calculation_618682030776619008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]'>
            <groupfilter function='member' level='[tmn:Purchase Date:ok]' member='#2023-05-01 00:00:00#' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CAD3D87499E74A4B8BCE376F061E042F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer State (group)]' />
              <groupfilter function='level-members' level='[Customer State]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Customer Name:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]' scope='cols' value='' />
            <encoding attr='space' class='0' field='[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]' field-type='quantitative' max='21723' min='0' range-type='fixed' scope='cols' type='space' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Customer Name:nk]</rows>
        <cols>[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]</cols>
      </table>
      <simple-id uuid='{B3FB17E8-9584-4A61-9E8E-E6C0FE85D39F}' />
    </worksheet>
    <worksheet name='Line Chart'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; by Month</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.168p6db1xg705o14ow2gk1wxlnyd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Matrix' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.168p6db1xg705o14ow2gk1wxlnyd'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_618682030776619008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Unit Solds&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_618682030776619008]' derivation='Sum' name='[sum:Calculation_618682030776619008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CAD3D87499E74A4B8BCE376F061E042F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer State (group)]' />
              <groupfilter function='level-members' level='[Customer State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]' scope='rows' value='' />
            <format attr='title' class='0' field='[federated.168p6db1xg705o14ow2gk1wxlnyd].[tmn:Purchase Date:qk]' scope='cols' value='' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]</rows>
        <cols>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tmn:Purchase Date:qk]</cols>
      </table>
      <simple-id uuid='{8ADE497D-A646-4322-8979-EFDF57EAC81E}' />
    </worksheet>
    <worksheet name='Product'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; by Product</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.168p6db1xg705o14ow2gk1wxlnyd' />
            <datasource name='Parameters' />
          </datasources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Matrix' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.168p6db1xg705o14ow2gk1wxlnyd'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_618682030776619008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Unit Solds&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column caption='Product1' datatype='string' name='[Product]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Product]' derivation='None' name='[none:Product:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_618682030776619008]' derivation='Sum' name='[sum:Calculation_618682030776619008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]'>
            <groupfilter function='member' level='[tmn:Purchase Date:ok]' member='#2023-05-01 00:00:00#' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CAD3D87499E74A4B8BCE376F061E042F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer State (group)]' />
              <groupfilter function='level-members' level='[Customer State]' />
            </groupfilter>
          </filter>
          <shelf-sorts>
            <shelf-sort-v2 dimension-to-sort='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Product:nk]' direction='DESC' is-on-innermost-dimension='true' measure-to-sort-by='[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]' shelf='rows' />
          </shelf-sorts>
          <slices>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <format attr='title' class='0' field='[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]' scope='cols' value='' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='display-field-labels' scope='rows' value='false' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
          </pane>
        </panes>
        <rows>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Product:nk]</rows>
        <cols>[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]</cols>
      </table>
      <simple-id uuid='{9BD9546A-EE3A-4241-97D5-BEB6F07D7971}' />
    </worksheet>
    <worksheet name='head'>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.168p6db1xg705o14ow2gk1wxlnyd' />
          </datasources>
          <datasource-dependencies datasource='federated.168p6db1xg705o14ow2gk1wxlnyd'>
            <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Cost of Goods Sold]' derivation='Sum' name='[sum:Cost of Goods Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Profit]' derivation='Sum' name='[sum:Profit:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Revenue]' derivation='Sum' name='[sum:Revenue:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Units Sold]' derivation='Sum' name='[sum:Units Sold:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Revenue:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Profit:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Units Sold:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Cost of Goods Sold:qk]&quot;' />
            </groupfilter>
          </filter>
          <manual-sort column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Revenue:qk]&quot;</bucket>
              <bucket>&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Profit:qk]&quot;</bucket>
              <bucket>&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Units Sold:qk]&quot;</bucket>
              <bucket>&quot;[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Cost of Goods Sold:qk]&quot;</bucket>
            </dictionary>
          </manual-sort>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]'>
            <groupfilter function='member' level='[tmn:Purchase Date:ok]' member='#2023-05-01 00:00:00#' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]'>
            <groupfilter function='crossjoin' user:ui-action-filter='[Action2_CAD3D87499E74A4B8BCE376F061E042F]' user:ui-enumeration='all' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[Customer State (group)]' />
              <groupfilter function='level-members' level='[Customer State]' />
            </groupfilter>
          </filter>
          <slices>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[:Measure Names]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (Region,Customer State1)]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='header'>
            <format attr='border-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='background-color' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='pane'>
            <format attr='border-color' data-class='subtotal' scope='cols' value='#000000' />
            <format attr='background-color' data-class='subtotal' scope='cols' value='#00000000' />
          </style-rule>
          <style-rule element='table'>
            <format attr='background-color' value='#00000000' />
          </style-rule>
          <style-rule element='worksheet'>
            <format attr='color' value='#000000' />
            <format attr='font-size' value='11' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='div-level' scope='cols' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <text column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Multiple Values]' />
            </encodings>
            <customized-label>
              <formatted-text>
                <run bold='true' fontsize='16'><![CDATA[<[federated.168p6db1xg705o14ow2gk1wxlnyd].[Multiple Values]>]]></run>
                <run>Æ&#10;</run>
                <run>Æ&#10;</run>
              </formatted-text>
            </customized-label>
            <style>
              <style-rule element='cell'>
                <format attr='text-align' value='center' />
                <format attr='vertical-align' value='center' />
              </style-rule>
              <style-rule element='mark'>
                <format attr='mark-labels-show' value='true' />
                <format attr='mark-labels-cull' value='true' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows />
        <cols>[federated.168p6db1xg705o14ow2gk1wxlnyd].[:Measure Names]</cols>
      </table>
      <simple-id uuid='{26A97527-A360-4AB8-A916-E645D55B9B40}' />
    </worksheet>
    <worksheet name='map'>
      <layout-options>
        <title>
          <formatted-text>
            <run>&lt;</run>
            <run>[Parameters].[Parameter 1]</run>
            <run>&gt; by State</run>
          </formatted-text>
        </title>
      </layout-options>
      <table>
        <view>
          <datasources>
            <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.168p6db1xg705o14ow2gk1wxlnyd' />
            <datasource name='Parameters' />
          </datasources>
          <mapsources>
            <mapsource name='Tableau' />
          </mapsources>
          <datasource-dependencies datasource='Parameters'>
            <column caption='Matrix' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
              <calculation class='tableau' formula='&quot;Profit&quot;' />
            </column>
          </datasource-dependencies>
          <datasource-dependencies datasource='federated.168p6db1xg705o14ow2gk1wxlnyd'>
            <column caption='Metric Selected' datatype='integer' name='[Calculation_618682030776619008]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='CASE [Parameters].[Parameter 1]&#13;&#10;WHEN &apos;Revenue&apos; THEN [Revenue]&#13;&#10;WHEN &apos;Profit&apos; THEN [Profit]&#13;&#10;WHEN &apos;Unit Solds&apos; THEN [Units Sold]&#13;&#10;WHEN &apos;Cost of Goods&apos; THEN [Cost of Goods Sold]&#13;&#10;END' />
            </column>
            <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
            <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Cost of Goods Sold]' role='measure' type='quantitative' />
            <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
              <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
                <bin default-name='false' value='&quot;Central&quot;'>
                  <value>&quot;Illinois&quot;</value>
                  <value>&quot;Indiana&quot;</value>
                  <value>&quot;Iowa&quot;</value>
                  <value>&quot;Kansas&quot;</value>
                  <value>&quot;Kentucky&quot;</value>
                  <value>&quot;Michigan&quot;</value>
                  <value>&quot;Minnesota&quot;</value>
                  <value>&quot;Missouri&quot;</value>
                  <value>&quot;Nebraska&quot;</value>
                  <value>&quot;North Dakota&quot;</value>
                  <value>&quot;Ohio&quot;</value>
                  <value>&quot;South Dakota&quot;</value>
                  <value>&quot;Wisconsin&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;East&quot;'>
                  <value>&quot;Connecticut&quot;</value>
                  <value>&quot;Delaware&quot;</value>
                  <value>&quot;Maine&quot;</value>
                  <value>&quot;Maryland&quot;</value>
                  <value>&quot;Massachusetts&quot;</value>
                  <value>&quot;New Hampshire&quot;</value>
                  <value>&quot;New Jersey&quot;</value>
                  <value>&quot;New York&quot;</value>
                  <value>&quot;Pennsylvania&quot;</value>
                  <value>&quot;Rhode Island&quot;</value>
                  <value>&quot;Vermont&quot;</value>
                  <value>&quot;Virginia&quot;</value>
                  <value>&quot;West Virginia&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;South&quot;'>
                  <value>&quot;Alabama&quot;</value>
                  <value>&quot;Arkansas&quot;</value>
                  <value>&quot;Florida&quot;</value>
                  <value>&quot;Georgia&quot;</value>
                  <value>&quot;Louisiana&quot;</value>
                  <value>&quot;Mississippi&quot;</value>
                  <value>&quot;North Carolina&quot;</value>
                  <value>&quot;Oklahoma&quot;</value>
                  <value>&quot;South Carolina&quot;</value>
                  <value>&quot;Tennessee&quot;</value>
                  <value>&quot;Texas&quot;</value>
                </bin>
                <bin default-name='false' value='&quot;West&quot;'>
                  <value>&quot;Alaska&quot;</value>
                  <value>&quot;Arizona&quot;</value>
                  <value>&quot;California&quot;</value>
                  <value>&quot;Colorado&quot;</value>
                  <value>&quot;Hawaii&quot;</value>
                  <value>&quot;Idaho&quot;</value>
                  <value>&quot;Montana&quot;</value>
                  <value>&quot;Nevada&quot;</value>
                  <value>&quot;New Mexico&quot;</value>
                  <value>&quot;Oregon&quot;</value>
                  <value>&quot;Utah&quot;</value>
                  <value>&quot;Washington&quot;</value>
                  <value>&quot;Wyoming&quot;</value>
                </bin>
              </calculation>
            </column>
            <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
            <column datatype='spatial' name='[Geometry]' role='measure' type='nominal' />
            <column datatype='integer' name='[Profit]' role='measure' type='quantitative' />
            <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
            <column datatype='integer' name='[Revenue]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Units Sold]' role='measure' type='quantitative' />
            <column-instance column='[Geometry]' derivation='Collect' name='[clct:Geometry:nk]' pivot='key' type='nominal' />
            <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
            <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
            <column-instance column='[Customer State]' derivation='None' name='[none:Customer State:nk]' pivot='key' type='nominal' />
            <column-instance column='[Calculation_618682030776619008]' derivation='Sum' name='[sum:Calculation_618682030776619008:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Purchase Date]' derivation='Month-Trunc' name='[tmn:Purchase Date:ok]' pivot='key' type='ordinal' />
            <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]'>
            <groupfilter function='level-members' level='[tmn:Purchase Date:ok]' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-enumeration='all' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]'>
            <groupfilter function='member' level='[tmn:Purchase Date:ok]' member='#2023-05-01 00:00:00#' user:ui-action-filter='[Action1_5B8462D096D94FC3A3317764EAF658DD]' user:ui-domain='database' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date))]</column>
            <column>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Action (MONTH(Purchase Date1))]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style>
          <style-rule element='axis'>
            <encoding attr='space' class='0' field='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Longitude (generated)]' field-type='quantitative' max='9724820.3364824504' min='-2825610.9047073065' projection='EPSG:3857' range-type='fixed' scope='cols' type='space' />
            <encoding attr='space' class='0' field='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Latitude (generated)]' field-type='quantitative' max='2065306.023373628' min='-5279548.3514357405' projection='EPSG:3857' range-type='fixed' scope='rows' type='space' />
          </style-rule>
          <style-rule element='table-div'>
            <format attr='line-pattern-only' scope='rows' value='dotted' />
            <format attr='stroke-size' scope='rows' value='0' />
            <format attr='line-visibility' scope='rows' value='off' />
            <format attr='line-pattern-only' scope='cols' value='solid' />
            <format attr='stroke-size' scope='cols' value='0' />
            <format attr='line-visibility' scope='cols' value='off' />
          </style-rule>
          <style-rule element='map'>
            <format attr='washout' value='1' />
          </style-rule>
        </style>
        <panes>
          <pane selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Multipolygon' />
            <encodings>
              <color column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]' />
              <lod column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[clct:Geometry:nk]' />
              <lod column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Customer State:nk]' />
              <geometry column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[clct:Geometry:nk]' />
              <lod column='[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]' />
            </encodings>
            <customized-tooltip>
              <formatted-text>
                <run bold='true'><![CDATA[<[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Customer State:nk]>]]></run>
                <run>Æ&#10;</run>
                <run fontcolor='#787878'>&lt;[Parameters].[Parameter 1]&gt; &#9;</run>
                <run bold='true'><![CDATA[<[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]>]]></run>
              </formatted-text>
            </customized-tooltip>
            <style>
              <style-rule element='mark'>
                <format attr='mark-labels-cull' value='true' />
                <format attr='mark-labels-show' value='false' />
              </style-rule>
              <style-rule element='pane'>
                <format attr='minheight' value='721' />
                <format attr='maxheight' value='721' />
                <format attr='minwidth' value='1232' />
                <format attr='maxwidth' value='1232' />
                <format attr='aspect' value='0' />
              </style-rule>
            </style>
          </pane>
        </panes>
        <rows>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Latitude (generated)]</rows>
        <cols>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Longitude (generated)]</cols>
      </table>
      <simple-id uuid='{1A316FD3-5B61-4ACE-B1B3-6D3FEB6F2D2F}' />
    </worksheet>
  </worksheets>
  <dashboards>
    <dashboard _.fcp.AccessibleZoneTabOrder.true...enable-sort-zone-taborder='true' name='Dashboard 1'>
      <style />
      <size maxheight='800' maxwidth='1200' minheight='800' minwidth='1200' sizing-mode='fixed' />
      <datasources>
        <datasource name='Parameters' />
        <datasource caption='soft_drink_sales.csv+ (Multiple Connections)' name='federated.168p6db1xg705o14ow2gk1wxlnyd' />
      </datasources>
      <datasource-dependencies datasource='Parameters'>
        <column caption='Matrix' datatype='string' name='[Parameter 1]' param-domain-type='list' role='measure' type='nominal' value='&quot;Profit&quot;'>
          <calculation class='tableau' formula='&quot;Profit&quot;' />
          <members>
            <member value='&quot;Revenue&quot;' />
            <member value='&quot;Profit&quot;' />
            <member value='&quot;Unit Solds&quot;' />
            <member value='&quot;Cost of Goods&quot;' />
          </members>
        </column>
      </datasource-dependencies>
      <datasource-dependencies datasource='federated.168p6db1xg705o14ow2gk1wxlnyd'>
        <column caption='Category1' datatype='string' name='[Category]' role='dimension' type='nominal' />
        <column caption='Company1' datatype='string' name='[Company]' role='dimension' type='nominal' />
        <column caption='Region' datatype='string' name='[Customer State (group)]' role='dimension' semantic-role='[State].[Name]' type='nominal'>
          <calculation class='categorical-bin' column='[Customer State]' new-bin='true'>
            <bin default-name='false' value='&quot;Central&quot;'>
              <value>&quot;Illinois&quot;</value>
              <value>&quot;Indiana&quot;</value>
              <value>&quot;Iowa&quot;</value>
              <value>&quot;Kansas&quot;</value>
              <value>&quot;Kentucky&quot;</value>
              <value>&quot;Michigan&quot;</value>
              <value>&quot;Minnesota&quot;</value>
              <value>&quot;Missouri&quot;</value>
              <value>&quot;Nebraska&quot;</value>
              <value>&quot;North Dakota&quot;</value>
              <value>&quot;Ohio&quot;</value>
              <value>&quot;South Dakota&quot;</value>
              <value>&quot;Wisconsin&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;East&quot;'>
              <value>&quot;Connecticut&quot;</value>
              <value>&quot;Delaware&quot;</value>
              <value>&quot;Maine&quot;</value>
              <value>&quot;Maryland&quot;</value>
              <value>&quot;Massachusetts&quot;</value>
              <value>&quot;New Hampshire&quot;</value>
              <value>&quot;New Jersey&quot;</value>
              <value>&quot;New York&quot;</value>
              <value>&quot;Pennsylvania&quot;</value>
              <value>&quot;Rhode Island&quot;</value>
              <value>&quot;Vermont&quot;</value>
              <value>&quot;Virginia&quot;</value>
              <value>&quot;West Virginia&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;South&quot;'>
              <value>&quot;Alabama&quot;</value>
              <value>&quot;Arkansas&quot;</value>
              <value>&quot;Florida&quot;</value>
              <value>&quot;Georgia&quot;</value>
              <value>&quot;Louisiana&quot;</value>
              <value>&quot;Mississippi&quot;</value>
              <value>&quot;North Carolina&quot;</value>
              <value>&quot;Oklahoma&quot;</value>
              <value>&quot;South Carolina&quot;</value>
              <value>&quot;Tennessee&quot;</value>
              <value>&quot;Texas&quot;</value>
            </bin>
            <bin default-name='false' value='&quot;West&quot;'>
              <value>&quot;Alaska&quot;</value>
              <value>&quot;Arizona&quot;</value>
              <value>&quot;California&quot;</value>
              <value>&quot;Colorado&quot;</value>
              <value>&quot;Hawaii&quot;</value>
              <value>&quot;Idaho&quot;</value>
              <value>&quot;Montana&quot;</value>
              <value>&quot;Nevada&quot;</value>
              <value>&quot;New Mexico&quot;</value>
              <value>&quot;Oregon&quot;</value>
              <value>&quot;Utah&quot;</value>
              <value>&quot;Washington&quot;</value>
              <value>&quot;Wyoming&quot;</value>
            </bin>
          </calculation>
        </column>
        <column caption='Customer State1' datatype='string' name='[Customer State]' role='dimension' semantic-role='[State].[Name]' type='nominal' />
        <column caption='Purchase Date1' datatype='date' name='[Purchase Date]' role='dimension' type='ordinal' />
        <column-instance column='[Category]' derivation='None' name='[none:Category:nk]' pivot='key' type='nominal' />
        <column-instance column='[Company]' derivation='None' name='[none:Company:nk]' pivot='key' type='nominal' />
        <column-instance column='[Purchase Date]' derivation='Quarter-Trunc' name='[tqr:Purchase Date:qk]' pivot='key' type='quantitative' />
      </datasource-dependencies>
      <zones>
        <zone h='100000' id='3' param='vert' type-v2='layout-flow' w='100000' x='0' y='0'>
          <zone fixed-size='103' h='12875' id='6' is-fixed='true' param='horz' type-v2='layout-flow' w='100000' x='0' y='0'>
            <zone forceUpdate='true' h='12875' id='7' type-v2='text' w='45166' x='0' y='0'>
              <formatted-text>
                <run bold='true' fontcolor='#000000' fontname='Tableau Semibold' fontsize='20'>KPI Dashboard</run>
              </formatted-text>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
                <format attr='background-color' value='#3e7ba1' />
              </zone-style>
            </zone>
            <zone fixed-size='650' h='12875' id='8' is-fixed='true' name='head' show-title='false' w='54834' x='45166' y='0'>
              <layout-cache fixed-size-h='82' type-h='fixed' type-w='fixed' />
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='4' />
              </zone-style>
            </zone>
            <zone-style>
              <format attr='border-color' value='#000000' />
              <format attr='border-style' value='none' />
              <format attr='border-width' value='0' />
              <format attr='background-color' value='#3e7ba1' />
            </zone-style>
          </zone>
          <zone h='87125' id='9' param='horz' type-v2='layout-flow' w='100000' x='0' y='12875'>
            <zone fixed-size='189' h='87125' id='12' is-fixed='true' param='vert' type-v2='layout-flow' w='15750' x='0' y='12875'>
              <zone h='9125' id='18' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='15584' x='83' y='13000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15875' id='15' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]' type-v2='filter' w='15584' x='83' y='22125'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15875' id='16' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]' type-v2='filter' w='15584' x='83' y='38000'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15875' id='20' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15584' x='83' y='53875'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='15875' id='17' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]' type-v2='filter' w='15584' x='83' y='69750'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone h='14250' id='19' name='map' pane-specification-id='0' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]' type-v2='color' w='15584' x='83' y='85625'>
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='solid' />
                <format attr='border-width' value='1' />
              </zone-style>
            </zone>
            <zone fixed-size='10' h='87125' id='27' is-fixed='true' param='vert' type-v2='layout-flow' w='833' x='15750' y='12875'>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='background-color' value='#3e7ba1' />
              </zone-style>
            </zone>
            <zone fixed-size='446' h='87125' id='22' is-fixed='true' param='vert' type-v2='layout-flow' w='37167' x='16583' y='12875'>
              <zone h='49125' id='24' name='Line Chart' w='37167' x='16583' y='12875'>
                <layout-cache minheight='180' minwidth='144' type-h='scalable' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
              <zone fixed-size='296' h='38000' id='23' is-fixed='true' name='Customer' w='37167' x='16583' y='62000'>
                <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                <zone-style>
                  <format attr='border-color' value='#000000' />
                  <format attr='border-style' value='none' />
                  <format attr='border-width' value='0' />
                  <format attr='margin' value='4' />
                </zone-style>
              </zone>
            </zone>
            <zone h='87125' id='25' is-fixed='true' type-v2='layout-basic' w='46250' x='53750' y='12875'>
              <zone h='52000' id='13' param='vert' type-v2='layout-flow' w='46250' x='53750' y='12875'>
                <zone h='52000' id='14' name='map' w='46250' x='53750' y='12875'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='771' maxwidth='1232' minheight='771' minwidth='1232' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
              <zone h='35125' id='26' param='vert' type-v2='layout-flow' w='46250' x='53750' y='64875'>
                <zone fixed-size='272' h='35000' id='21' is-fixed='true' name='Product' w='46250' x='53750' y='64875'>
                  <layout-cache minwidth='200' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                  </zone-style>
                </zone>
              </zone>
            </zone>
          </zone>
        </zone>
      </zones>
      <devicelayouts>
        <devicelayout auto-generated='true' name='Phone'>
          <size maxheight='1700' minheight='1700' sizing-mode='vscroll' />
          <zones>
            <zone h='100000' id='33' type-v2='layout-basic' w='100000' x='0' y='0'>
              <zone h='98000' id='32' param='vert' type-v2='layout-flow' w='98666' x='667' y='1000'>
                <zone forceUpdate='true' h='12875' id='7' type-v2='text' w='45166' x='0' y='0'>
                  <formatted-text>
                    <run bold='true' fontcolor='#000000' fontname='Tableau Semibold' fontsize='20'>KPI Dashboard</run>
                  </formatted-text>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                    <format attr='background-color' value='#3e7ba1' />
                  </zone-style>
                </zone>
                <zone fixed-size='95' h='12875' id='8' is-fixed='true' name='head' show-title='false' w='54834' x='45166' y='0'>
                  <layout-cache fixed-size-h='82' type-h='fixed' type-w='fixed' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='49125' id='24' is-fixed='true' name='Line Chart' w='37167' x='16583' y='12875'>
                  <layout-cache minheight='180' minwidth='144' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='9125' id='18' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type-v2='filter' w='15584' x='83' y='13000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15875' id='15' mode='checkdropdown' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]' type-v2='filter' w='15584' x='83' y='22125'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15875' id='16' mode='checkdropdown' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]' type-v2='filter' w='15584' x='83' y='38000'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15875' id='17' mode='checkdropdown' name='map' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]' type-v2='filter' w='15584' x='83' y='69750'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='52000' id='14' is-fixed='true' name='map' w='46250' x='53750' y='12875'>
                  <layout-cache has-max-size-h='true' has-max-size-w='true' maxheight='771' maxwidth='1232' minheight='771' minwidth='1232' type-h='scalable' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='14250' id='19' name='map' pane-specification-id='0' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]' type-v2='color' w='15584' x='83' y='85625'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone h='15875' id='20' mode='list' param='[Parameters].[Parameter 1]' type-v2='paramctrl' w='15584' x='83' y='53875'>
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='280' h='38000' id='23' is-fixed='true' name='Customer' w='37167' x='16583' y='62000'>
                  <layout-cache minwidth='260' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
                <zone fixed-size='272' h='35000' id='21' is-fixed='true' name='Product' w='46250' x='53750' y='64875'>
                  <layout-cache minwidth='200' type-h='fixed' type-w='scalable' />
                  <zone-style>
                    <format attr='border-color' value='#000000' />
                    <format attr='border-style' value='none' />
                    <format attr='border-width' value='0' />
                    <format attr='margin' value='4' />
                    <format attr='padding' value='0' />
                  </zone-style>
                </zone>
              </zone>
              <zone-style>
                <format attr='border-color' value='#000000' />
                <format attr='border-style' value='none' />
                <format attr='border-width' value='0' />
                <format attr='margin' value='8' />
              </zone-style>
            </zone>
          </zones>
        </devicelayout>
      </devicelayouts>
      <simple-id uuid='{443F1821-205A-4B16-BAD7-3E7804332B2C}' />
    </dashboard>
  </dashboards>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='map'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='160'>
            <card param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]' type='filter' />
            <card param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Company:nk]' type='filter' />
            <card param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Category:nk]' type='filter' />
            <card param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[tqr:Purchase Date:qk]' show-domain='false' show-null-ctrls='false' type='filter' />
            <card mode='list' param='[Parameters].[Parameter 1]' type='parameter' />
            <card pane-specification-id='0' param='[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]</field>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[dy:Purchase Date:ok]</field>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Customer State:nk]</field>
          </color-one-way>
        </highlight>
        <default-map-tool-selection tool='1' />
      </viewpoint>
      <simple-id uuid='{152271D8-7BFE-4049-858A-AF78C264646B}' />
    </window>
    <window class='worksheet' name='head'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
            <card type='measures' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[:Measure Names]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{CD85F0DB-363F-47CC-A356-03A1129D3F8F}' />
    </window>
    <window class='worksheet' name='Product'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{412D10F3-8250-4F50-B87B-70C3427CD29D}' />
    </window>
    <window class='worksheet' name='Customer'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='horizontal'>
              <node-reference>
                <axis>[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]</axis>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Customer Name:nk]</field>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[none:Product:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{5D287874-E5A8-4634-8102-064147221797}' />
    </window>
    <window class='worksheet' name='Line Chart'>
      <cards>
        <edge name='left'>
          <strip size='160'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tmn:Purchase Date:qk]</field>
            <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[yr:Purchase Date:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
      <simple-id uuid='{3C1FD240-DCEA-4CBC-8578-96F755C633C6}' />
    </window>
    <window class='dashboard' maximized='true' name='Dashboard 1'>
      <viewpoints>
        <viewpoint name='Customer' />
        <viewpoint name='Line Chart'>
          <zoom type='entire-view' />
          <selection-collection>
            <tuple-selection>
              <tuple-reference>
                <tuple-descriptor>
                  <pane-descriptor>
                    <x-fields>
                      <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tmn:Purchase Date:qk]</field>
                    </x-fields>
                    <y-fields>
                      <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]</field>
                    </y-fields>
                  </pane-descriptor>
                  <columns>
                    <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[sum:Calculation_618682030776619008:qk]</field>
                    <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[tmn:Purchase Date:qk]</field>
                  </columns>
                </tuple-descriptor>
                <tuple>
                  <value>177992</value>
                  <value>#2023-05-01 00:00:00#</value>
                </tuple>
              </tuple-reference>
            </tuple-selection>
          </selection-collection>
        </viewpoint>
        <viewpoint name='Product' />
        <viewpoint name='head' />
        <viewpoint name='map'>
          <zoom type='entire-view' />
          <highlight>
            <color-one-way>
              <field>[federated.168p6db1xg705o14ow2gk1wxlnyd].[Customer State (group)]</field>
            </color-one-way>
          </highlight>
          <default-map-tool-selection tool='1' />
        </viewpoint>
      </viewpoints>
      <active id='-1' />
      <simple-id uuid='{3FD535B0-82D4-42CF-84F2-03447DE82DF2}' />
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Customer' width='192'>
      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
      0M1ZDGzzAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Dashboard 1' width='192'>
      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
      Ie7/A2wF1Z1JXoVoAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Line Chart' width='192'>
      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
      tmvVTL0jhwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Product' width='192'>
      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
    </thumbnail>
    <thumbnail height='106' name='head' width='192'>
      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
    </thumbnail>
    <thumbnail height='192' name='map' width='192'>
      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
    </thumbnail>
  </thumbnails>
</workbook>
